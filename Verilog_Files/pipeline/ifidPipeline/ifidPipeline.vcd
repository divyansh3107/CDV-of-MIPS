$date
	Thu May 18 23:17:16 2023
$end
$version
	QuestaSim Version 2021.3
$end
$timescale
	1ps
$end

$scope module tb $end
$var reg 1 ! clk $end
$var reg 32 " opcode [31:0] $end
$var reg 1 # hazardflag $end
$var reg 32 $ ifidOpcode [31:0] $end

$scope module dut $end
$var wire 1 % opcode [31] $end
$var wire 1 & opcode [30] $end
$var wire 1 ' opcode [29] $end
$var wire 1 ( opcode [28] $end
$var wire 1 ) opcode [27] $end
$var wire 1 * opcode [26] $end
$var wire 1 + opcode [25] $end
$var wire 1 , opcode [24] $end
$var wire 1 - opcode [23] $end
$var wire 1 . opcode [22] $end
$var wire 1 / opcode [21] $end
$var wire 1 0 opcode [20] $end
$var wire 1 1 opcode [19] $end
$var wire 1 2 opcode [18] $end
$var wire 1 3 opcode [17] $end
$var wire 1 4 opcode [16] $end
$var wire 1 5 opcode [15] $end
$var wire 1 6 opcode [14] $end
$var wire 1 7 opcode [13] $end
$var wire 1 8 opcode [12] $end
$var wire 1 9 opcode [11] $end
$var wire 1 : opcode [10] $end
$var wire 1 ; opcode [9] $end
$var wire 1 < opcode [8] $end
$var wire 1 = opcode [7] $end
$var wire 1 > opcode [6] $end
$var wire 1 ? opcode [5] $end
$var wire 1 @ opcode [4] $end
$var wire 1 A opcode [3] $end
$var wire 1 B opcode [2] $end
$var wire 1 C opcode [1] $end
$var wire 1 D opcode [0] $end
$var wire 1 E clk $end
$var wire 1 F hazardflag $end
$var reg 32 G ifidOpcode [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#150000
$dumpvars
x!
bx "
x#
bx $
bx G
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
xF
$end
